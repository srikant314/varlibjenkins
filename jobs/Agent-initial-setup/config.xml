<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>This job setup the agent slave with docker ,git, and all required application tools.</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.4.5">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/srikant314/devops-cert-project</url>
        <credentialsId>Git-Credentials</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <org.jenkinsci.plugins.ansible.AnsiblePlaybookBuilder plugin="ansible@1.1">
      <playbook>/var/lib/jenkins/workspace/Agent-initial-setup/selenium-install.yml</playbook>
      <inventory class="org.jenkinsci.plugins.ansible.InventoryPath">
        <path>/etc/ansible/hosts</path>
      </inventory>
      <limit>both</limit>
      <tags></tags>
      <skippedTags></skippedTags>
      <startAtTask></startAtTask>
      <credentialsId>jenkins-slave-SSH</credentialsId>
      <vaultCredentialsId></vaultCredentialsId>
      <become>false</become>
      <becomeUser>root</becomeUser>
      <sudo>false</sudo>
      <sudoUser></sudoUser>
      <forks>5</forks>
      <unbufferedOutput>true</unbufferedOutput>
      <colorizedOutput>false</colorizedOutput>
      <disableHostKeyChecking>false</disableHostKeyChecking>
      <additionalParameters></additionalParameters>
      <copyCredentialsInWorkspace>false</copyCredentialsInWorkspace>
    </org.jenkinsci.plugins.ansible.AnsiblePlaybookBuilder>
    <org.jenkinsci.plugins.ansible.AnsiblePlaybookBuilder plugin="ansible@1.1">
      <playbook>/var/lib/jenkins/workspace/Agent-initial-setup/docker-install.yml</playbook>
      <inventory class="org.jenkinsci.plugins.ansible.InventoryPath">
        <path>/etc/ansible/hosts</path>
      </inventory>
      <limit>both</limit>
      <tags></tags>
      <skippedTags></skippedTags>
      <startAtTask></startAtTask>
      <credentialsId>jenkins-slave-SSH</credentialsId>
      <vaultCredentialsId></vaultCredentialsId>
      <become>false</become>
      <becomeUser>root</becomeUser>
      <sudo>false</sudo>
      <sudoUser></sudoUser>
      <forks>5</forks>
      <unbufferedOutput>true</unbufferedOutput>
      <colorizedOutput>false</colorizedOutput>
      <disableHostKeyChecking>false</disableHostKeyChecking>
      <additionalParameters></additionalParameters>
      <copyCredentialsInWorkspace>false</copyCredentialsInWorkspace>
    </org.jenkinsci.plugins.ansible.AnsiblePlaybookBuilder>
  </builders>
  <publishers>
    <hudson.tasks.BuildTrigger>
      <childProjects>Build-Containerize-PHP</childProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </hudson.tasks.BuildTrigger>
  </publishers>
  <buildWrappers/>
</project>